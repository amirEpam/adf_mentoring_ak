{
	"name": "SQLS_to_Blob_incremintal",
	"properties": {
		"activities": [
			{
				"name": "LookupOldWaterMarkActivity",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_SS",
						"type": "DatasetReference",
						"parameters": {
							"InputTableName": "watermarktable"
						}
					}
				}
			},
			{
				"name": "LookupNewWaterMarkActivity",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "select max(transaction_date) as NewWatermarkvalue from [dbo].[Tickets]",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_SS",
						"type": "DatasetReference",
						"parameters": {
							"InputTableName": "ignore"
						}
					}
				}
			},
			{
				"name": "IncrementalCopy",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "TruncateStgArea",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select * from [dbo].[Tickets] where transaction_date > '@{activity('LookupOldWaterMarkActivity').output.firstRow.WatermarkValue}' and transaction_date <= '@{activity('LookupNewWaterMarkActivity').output.firstRow.NewWatermarkvalue}'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_SS",
						"type": "DatasetReference",
						"parameters": {
							"InputTableName": "Tickets"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DS_ASQL_AK",
						"type": "DatasetReference",
						"parameters": {
							"OutpuTableName": "cinema_tickets"
						}
					}
				]
			},
			{
				"name": "TruncateStgArea",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "LookupOldWaterMarkActivity",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "LookupNewWaterMarkActivity",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "LS_ASQL_AK",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "TRUNCATE TABLE [stg].[cinema_tickets]",
								"type": "Expression"
							}
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "LookupSPNames",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "WriteWatermark",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT SPName\n  FROM [dbo].[SPList]\nwhere id >= 10 order by id ",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_ASQL_AK",
						"type": "DatasetReference",
						"parameters": {
							"OutpuTableName": "test"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "EachSP",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "LookupSPNames",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LookupSPNames').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "SQL to 3NF",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": {
									"value": "@item().SPName",
									"type": "Expression"
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_ASQL_AK",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "WriteWatermark",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "IncrementalCopy",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_write_watermark]",
					"storedProcedureParameters": {
						"LastModifiedtime": {
							"value": {
								"value": "@{activity('LookupNewWaterMarkActivity').output.firstRow.NewWatermarkvalue}",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"TableName": {
							"value": {
								"value": "@{activity('LookupOldWaterMarkActivity').output.firstRow.TableName}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SS",
					"type": "LinkedServiceReference"
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2023-11-30T10:32:35Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}