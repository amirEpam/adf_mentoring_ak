{
	"name": "Blob_to_Lake-json",
	"properties": {
		"activities": [
			{
				"name": "BlobToLake",
				"description": "Blob to Lake files. Online",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LookupOldWaterMarkActivity",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "LookupNewWaterkMark",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"modifiedDatetimeStart": {
								"value": "@convertTimeZone(activity('LookupOldWaterMarkActivity').output.firstRow.WatermarkValue, 'Central Asia Standard Time', 'UTC')",
								"type": "Expression"
							},
							"modifiedDatetimeEnd": null,
							"wildcardFileName": "*.json",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "DS_ABLB_ONLINE",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DS_ADLS_ONLINE",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "LookupOldWaterMarkActivity",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "SELECT [WatermarkValue], [TableName]\n  FROM [CinemaTickets].[dbo].[watermarktable] where TableName = 'online'",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_SS",
						"type": "DatasetReference",
						"parameters": {
							"InputTableName": "watermarktable"
						}
					}
				}
			},
			{
				"name": "GetFileList",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_ABLB_ONLINE",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "JsonReadSettings"
					}
				}
			},
			{
				"name": "LookupNewWaterkMark",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "GetFileList",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetFileList').output.childItems",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "GetFileMetadata",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_ABLB_ONLINE_PAR",
									"type": "DatasetReference",
									"parameters": {
										"FileName": {
											"value": "@item().Name",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"lastModified"
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							}
						},
						{
							"name": "If greater than max",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "GetFileMetadata",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(ticks(activity('GetFileMetadata').output.lastModified), ticks(formatDateTime(variables('NewWaterMarkValue'))))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "SetNewWaterMarkValue",
										"type": "SetVariable",
										"dependsOn": [],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "NewWaterMarkValue",
											"value": {
												"value": "@activity('GetFileMetadata').output.lastModified",
												"type": "Expression"
											}
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "WriteWatermark",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "BlobToLake",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_write_watermark]",
					"storedProcedureParameters": {
						"LastModifiedtime": {
							"value": {
								"value": "@formatDateTime(variables('NewWaterMarkValue'))",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"TableName": {
							"value": {
								"value": "@activity('LookupOldWaterMarkActivity').output.firstRow.TableName",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SS",
					"type": "LinkedServiceReference"
				}
			}
		],
		"variables": {
			"NewWaterMarkValue": {
				"type": "String",
				"defaultValue": "2010-01-01T09:00:00Z"
			}
		},
		"annotations": [],
		"lastPublishTime": "2023-11-30T11:28:15Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}