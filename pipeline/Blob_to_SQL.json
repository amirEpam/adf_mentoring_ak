{
	"name": "Blob_to_SQL",
	"properties": {
		"activities": [
			{
				"name": "EachFileBLOBToSQL",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "TruncateSTG_SQL",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetBLOBFileNames').output.childItems",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "BLOB to SQL",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"additionalColumns": [
										{
											"name": "pipelineId",
											"value": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											}
										},
										{
											"name": "source_filename",
											"value": {
												"value": "@item().Name",
												"type": "Expression"
											}
										}
									],
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false,
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_ABLB_AK",
									"type": "DatasetReference",
									"parameters": {
										"FileName": {
											"value": "@item().Name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_ASQL_AK",
									"type": "DatasetReference",
									"parameters": {
										"OutpuTableName": {
											"value": "@if(contains(item().Name, 'ratings_part'), 'ratings', substring(item().Name, 0, lastIndexOf(item().Name, '.')))",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "LookupSPNames",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "EachFileBLOBToSQL",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT SPName\n  FROM [dbo].[SPList]\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_ASQL_AK",
						"type": "DatasetReference",
						"parameters": {
							"OutpuTableName": "test"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "EachSP",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "LookupSPNames",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LookupSPNames').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "SQL to 3NF",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": {
									"value": "@item().SPName",
									"type": "Expression"
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_ASQL_AK",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "GetBLOBFileNames",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_ABLB_AK_LIST",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "TruncateSTG_SQL",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "GetBLOBFileNames",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetBLOBFileNames').output.childItems",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "truncate",
							"type": "Script",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "LS_ASQL_AK",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "TRUNCATE TABLE [stg].[@{if(contains(item().Name, 'ratings_part'), 'ratings', substring(item().Name, 0, lastIndexOf(item().Name, '.')))}]",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						}
					]
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2023-11-12T10:39:52Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}